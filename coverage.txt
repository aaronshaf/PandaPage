bun test v1.2.17 (282dda62)

packages/pandapage/test/table-parser-simple.test.ts:
(pass) Table Parser Properties > parseTableProperties > should parse table width [3.63ms]
(pass) Table Parser Properties > parseTableProperties > should parse table width percentage
(pass) Table Parser Properties > parseTableProperties > should parse table alignment [0.27ms]
(pass) Table Parser Properties > parseTableProperties > should parse table background color [0.06ms]
(pass) Table Parser Properties > parseTableProperties > should handle empty properties [0.06ms]
(pass) Table Parser Properties > parseTableProperties > should ignore auto color [0.02ms]
(pass) Table Parser Properties > parseTableRowProperties > should parse row height [0.12ms]
(pass) Table Parser Properties > parseTableRowProperties > should parse header row [0.05ms]
(pass) Table Parser Properties > parseTableRowProperties > should handle non-header row [0.05ms]
(pass) Table Parser Properties > parseTableCellProperties > should parse cell width
(pass) Table Parser Properties > parseTableCellProperties > should parse cell width percentage [0.17ms]
(pass) Table Parser Properties > parseTableCellProperties > should parse vertical alignment
(pass) Table Parser Properties > parseTableCellProperties > should parse cell background color
(pass) Table Parser Properties > parseTableCellProperties > should handle invalid vertical alignment [0.14ms]
(pass) Table Parser Properties > parseTableCellProperties > should handle empty cell properties [0.02ms]

packages/pandapage/test/docx-to-structured.test.ts:
(pass) docx-to-structured > convertEnhancedDocumentToMarkdown > should convert document with metadata to markdown with frontmatter
(pass) docx-to-structured > docxToStructured > should handle invalid buffer [5.79ms]
(pass) docx-to-structured > docxToStructured > should handle empty buffer [1.23ms]
(pass) docx-to-structured > docxToStructured > should return Effect type
(pass) docx-to-structured > docxToStructured > should handle buffer with invalid ZIP signature [0.02ms]
(pass) docx-to-structured > parseDocxToStructured > should be promise-based wrapper [0.66ms]
(pass) docx-to-structured > StructuredDocxResult interface > should have correct type structure
(pass) docx-to-structured > Markdown conversion logic > should format bold text correctly [0.06ms]
(pass) docx-to-structured > Markdown conversion logic > should format italic text correctly
(pass) docx-to-structured > Markdown conversion logic > should format underline text correctly
(pass) docx-to-structured > Markdown conversion logic > should format headings correctly
(pass) docx-to-structured > Markdown conversion logic > should handle heading style names
(pass) docx-to-structured > Markdown conversion logic > should handle edge case heading styles [0.02ms]
(pass) docx-to-structured > Frontmatter generation > should format frontmatter correctly
(pass) docx-to-structured > Frontmatter generation > should handle metadata with missing fields
(pass) docx-to-structured > Frontmatter generation > should skip frontmatter for empty metadata
(pass) docx-to-structured > Element processing > should handle empty runs array
(pass) docx-to-structured > Element processing > should handle runs with multiple formatting
(pass) docx-to-structured > Element processing > should handle paragraphs without style
(pass) docx-to-structured > Element processing > should trim whitespace from paragraphs
(pass) docx-to-structured > Line handling > should remove trailing empty lines
(pass) docx-to-structured > Line handling > should handle all empty lines
(pass) docx-to-structured > Line handling > should preserve internal empty lines
(pass) docx-to-structured > Error handling > DocxParseError should be used for errors
(pass) docx-to-structured > Table conversion > should handle table elements
(pass) docx-to-structured > Table conversion > should handle missing table markdown
(pass) docx-to-structured > Integration scenarios > should handle document with mixed content
(pass) docx-to-structured > Integration scenarios > should handle document with only tables
(pass) docx-to-structured > Integration scenarios > should handle empty document

packages/pandapage/test/document-parser.test.ts:
(pass) Document Parser > parseDocumentXmlEnhanced > should parse document with paragraphs [4.21ms]
(pass) Document Parser > parseDocumentXmlEnhanced > should parse document with namespace prefixed body [0.69ms]
(pass) Document Parser > parseDocumentXmlEnhanced > should handle missing body element [0.22ms]
(pass) Document Parser > parseDocumentXmlEnhanced > should parse tables [0.79ms]
(pass) Document Parser > parseDocumentXmlEnhanced > should skip section properties [0.30ms]
(pass) Document Parser > parseDocumentXmlEnhanced > should handle unknown elements gracefully [0.35ms]
(pass) Document Parser > parseNumberingXml > should return undefined for null numbering XML [0.41ms]
(pass) Document Parser > parseNumberingXml > should return undefined for empty numbering XML [0.07ms]
(pass) Document Parser > parseNumberingXml > should parse valid numbering XML [0.38ms]
(pass) Document Parser > parseNumberingXml > should handle invalid numbering XML structure [0.06ms]
(pass) Document Parser > parseNumberingXml > should handle malformed XML gracefully [0.35ms]
(pass) Document Parser > extractFileContent > should extract file content successfully
(pass) Document Parser > extractFileContent > should return null for missing file [0.06ms]
(pass) Document Parser > extractFileContent > should handle decoding errors gracefully
(pass) Document Parser > calculateDocumentStats > should calculate stats for paragraphs
(pass) Document Parser > calculateDocumentStats > should calculate stats for tables
(pass) Document Parser > calculateDocumentStats > should handle empty elements
(pass) Document Parser > calculateDocumentStats > should handle paragraphs with empty runs
(pass) Document Parser > calculateDocumentStats > should handle mixed content

packages/pandapage/test/reader-enhanced.test.ts:
(pass) reader-enhanced > readEnhancedDocx > should parse a simple DOCX file [7.45ms]
(pass) reader-enhanced > readEnhancedDocx > should calculate document statistics [1.56ms]
(pass) reader-enhanced > readEnhancedDocx > should handle DOCX without metadata gracefully [0.07ms]
(pass) reader-enhanced > readEnhancedDocx > should handle corrupted metadata gracefully [1.62ms]
(pass) reader-enhanced > readEnhancedDocx > should handle empty paragraphs [0.93ms]
(pass) reader-enhanced > readEnhancedDocx > should handle paragraphs without runs [0.69ms]
(pass) reader-enhanced > readEnhancedDocx > should fail when document.xml is missing [0.38ms]
(pass) reader-enhanced > readEnhancedDocx > should fail with corrupted ZIP [0.05ms]
(pass) reader-enhanced > readEnhancedDocx > should handle invalid XML in document [0.31ms]
(pass) reader-enhanced > readEnhancedDocx > should handle tables in statistics [0.55ms]
(pass) reader-enhanced > readEnhancedDocx > should handle mixed content [1.15ms]
(pass) reader-enhanced > readEnhancedDocx > should extract metadata correctly
(pass) reader-enhanced > readEnhancedDocx > should return DocxParseError for any failure [1.48ms]

packages/pandapage/test/worker-pool.test.ts:
(pass) shouldUseWorker threshold is 1MB
(pass) createTransferableTask generates unique IDs
(pass) createTransferableTask includes buffer in transfer list
(pass) createTransferableTask preserves options
(pass) createTransferableTask supports all document types [0.16ms]
(pass) worker pool config defaults

packages/pandapage/test/error-handling.test.ts:
(pass) createCategorizedError - should create proper error structure [0.18ms]
(pass) createCategorizedError - should handle recoverable errors
(pass) getRecoveryStrategy - should return correct strategies [0.12ms]
(pass) Error categories should be type-safe
(pass) createCategorizedError - should handle context data
(pass) Error timestamps should be recent
(pass) Error messages should be non-empty strings [0.17ms]

packages/pandapage/test/docx-parsing.test.ts:
(pass) docxToMarkdown - should handle empty buffer gracefully [0.28ms]
(pass) docxToMarkdown - should return Effect with proper error type
(pass) readDocx - should handle invalid ZIP data [1.23ms]
(pass) docxToMarkdown - should produce consistent error messages [0.19ms]
(pass) Effect chain should be composable
(pass) Error types should be consistent [0.49ms]
(pass) Buffer size validation [1.10ms]
(pass) Memory efficiency - Effects should not hold references [0.09ms]

packages/pandapage/test/simple-docx.test.ts:
(pass) DOCX file extension detection
(pass) Error message formatting
(pass) Document processing pipeline validation
(pass) Markdown conversion basics
(pass) ZIP file structure validation [0.32ms]
(pass) Document metadata extraction [0.03ms]
(pass) Performance benchmarks [2.47ms]
(pass) Memory usage patterns

packages/pandapage/test/worker-basic.test.ts:
(pass) ArrayBuffer operations work correctly
(pass) Worker threshold calculations
(pass) Task ID generation uniqueness [1.08ms]
(pass) File type detection
(pass) Transferable object validation
(pass) Performance timing utilities [0.28ms]
(pass) Basic error structure validation
(pass) Memory allocation patterns
(pass) Document type constants

packages/pandapage/test/xml-parser.test.ts:
(pass) XML Parser > parseXmlString > should parse valid XML [0.04ms]
(pass) XML Parser > parseXmlString > should handle XML with BOM [0.11ms]
(pass) XML Parser > parseXmlString > should handle namespaced XML
(pass) XML Parser > parseXmlString > should fail on invalid XML [0.44ms]
(pass) XML Parser > parseXmlString > should fail on empty string [0.22ms]
(pass) XML Parser > parseXmlString > should handle XML with attributes [0.03ms]
(skip) XML Parser > parseXmlString > should handle XML with CDATA
(pass) XML Parser > parseXmlString > should handle XML with comments
(pass) XML Parser > parseXmlString > should return XmlParseError for malformed XML
(pass) XML Parser > EffectXmlParser > element > should find element by local name
(pass) XML Parser > EffectXmlParser > element > should find namespaced element [0.37ms]
(pass) XML Parser > EffectXmlParser > element > should return null for non-existent element
(pass) XML Parser > EffectXmlParser > element > should find first matching element
(pass) XML Parser > EffectXmlParser > elements > should find all elements with local name [0.12ms]
(pass) XML Parser > EffectXmlParser > elements > should find all child elements when no local name [0.04ms]
(pass) XML Parser > EffectXmlParser > elements > should return empty array for no matches
(pass) XML Parser > EffectXmlParser > elements > should handle namespaced elements [0.05ms]
(pass) XML Parser > EffectXmlParser > attr > should get attribute value [0.12ms]
(pass) XML Parser > EffectXmlParser > attr > should get namespaced attribute [0.03ms]
(pass) XML Parser > EffectXmlParser > attr > should return null for non-existent attribute [0.02ms]
(pass) XML Parser > EffectXmlParser > attr > should handle root attributes
(pass) XML Parser > EffectXmlParser > attrs > should get all attributes [0.06ms]
(pass) XML Parser > EffectXmlParser > attrs > should return empty array for element without attributes [0.02ms]
(pass) XML Parser > EffectXmlParser > intAttr > should parse integer attribute [0.04ms]
(pass) XML Parser > EffectXmlParser > intAttr > should parse zero [0.02ms]
(pass) XML Parser > EffectXmlParser > intAttr > should return null for non-numeric [0.02ms]
(pass) XML Parser > EffectXmlParser > intAttr > should use default value
(pass) XML Parser > EffectXmlParser > intAttr > should return null without default
(pass) XML Parser > EffectXmlParser > floatAttr > should parse float attribute
(pass) XML Parser > EffectXmlParser > floatAttr > should parse integer as float
(pass) XML Parser > EffectXmlParser > floatAttr > should return null for non-numeric [0.03ms]
(pass) XML Parser > EffectXmlParser > floatAttr > should use default value [0.01ms]
(pass) XML Parser > EffectXmlParser > boolAttr > should parse true values
(pass) XML Parser > EffectXmlParser > boolAttr > should parse false values
(pass) XML Parser > EffectXmlParser > boolAttr > should handle '1' as true
(pass) XML Parser > EffectXmlParser > boolAttr > should handle '0' as false
(pass) XML Parser > EffectXmlParser > boolAttr > should handle 'on' as true [0.13ms]
(pass) XML Parser > EffectXmlParser > boolAttr > should use default value
(pass) XML Parser > EffectXmlParser > hexAttr > should parse hex attribute
(pass) XML Parser > EffectXmlParser > hexAttr > should handle hex with prefix
(pass) XML Parser > EffectXmlParser > hexAttr > should return null for invalid hex
(pass) XML Parser > EffectXmlParser > hexAttr > should use default value [0.14ms]
(pass) XML Parser > EffectXmlParser > elementAttr > should get attribute from child element [0.02ms]
(pass) XML Parser > EffectXmlParser > elementAttr > should return null if element not found
(pass) XML Parser > EffectXmlParser > elementAttr > should return null if attribute not found
(pass) XML Parser > EffectXmlParser > elementAttr > should handle namespaced elements
(pass) XML Parser > EffectXmlParser > textContent > should get text content
(pass) XML Parser > EffectXmlParser > textContent > should return empty string for empty element
(pass) XML Parser > EffectXmlParser > textContent > should get nested text content [0.11ms]
(pass) XML Parser > getElementByPath > should find element by path [0.03ms]
(pass) XML Parser > getElementByPath > should handle paths starting with /
(pass) XML Parser > getElementByPath > should handle empty path parts [0.04ms]
(pass) XML Parser > getElementByPath > should return null for non-existent path [0.01ms]
(pass) XML Parser > getElementByPath > should work with custom parser
(pass) XML Parser > getElementsByPath > should find multiple elements by path [0.04ms]
(pass) XML Parser > getElementsByPath > should handle wildcard paths [0.03ms]
(pass) XML Parser > getElementsByPath > should handle multiple wildcards [0.02ms]
(pass) XML Parser > getElementsByPath > should return empty array for no matches
(pass) XML Parser > getElementsByPath > should work with custom parser [0.09ms]
(pass) XML Parser > createXmlParser > should create new parser instance
(pass) XML Parser > createXmlParser > should create working parser
(pass) XML Parser > xmlParser global instance > should be defined
(pass) XML Parser > xmlParser global instance > should work correctly [0.15ms]
(pass) XML Parser > XmlParseError > should have correct structure
(pass) XML Parser > Edge cases > should handle elements with text nodes between [0.02ms]
(pass) XML Parser > Edge cases > should handle deeply nested structures
(pass) XML Parser > Edge cases > should handle special characters in content

packages/pandapage/test/pptx-reader.test.ts:
(pass) PPTX Reader > PptxParseError > should have correct structure
(pass) PPTX Reader > PptxParseError > should be throwable
(pass) PPTX Reader > readPptx with real ZIP data > should handle invalid buffer [0.71ms]
(pass) PPTX Reader > readPptx with real ZIP data > should handle empty buffer [0.57ms]
(pass) PPTX Reader > readPptx with real ZIP data > should create proper Effect type [0.01ms]
(pass) PPTX Reader > Type definitions > PptxContent types should be valid
(pass) PPTX Reader > Type definitions > PptxSlide should have required properties
(pass) PPTX Reader > Type definitions > PptxDocument should support metadata
(pass) PPTX Reader > Type definitions > Metadata should be optional
(pass) PPTX Reader > Content parsing patterns > should recognize title pattern
(pass) PPTX Reader > Content parsing patterns > should recognize bullet pattern
(pass) PPTX Reader > Content parsing patterns > should match shape elements
(pass) PPTX Reader > Content parsing patterns > should match paragraph elements [0.16ms]
(pass) PPTX Reader > Content parsing patterns > should match text elements
(pass) PPTX Reader > File path handling > should match slide file paths
(pass) PPTX Reader > File path handling > should extract slide numbers
(pass) PPTX Reader > File path handling > should sort slide files correctly [0.06ms]
(pass) PPTX Reader > Metadata parsing patterns > should match title in metadata
(pass) PPTX Reader > Metadata parsing patterns > should match author in metadata
(pass) PPTX Reader > Metadata parsing patterns > should handle empty metadata values
(pass) PPTX Reader > Metadata parsing patterns > should not match when tags are missing
(pass) PPTX Reader > ArrayBuffer handling > should convert ArrayBuffer to Uint8Array [0.11ms]
(pass) PPTX Reader > ArrayBuffer handling > should handle empty ArrayBuffer
(pass) PPTX Reader > Complex XML patterns > should handle nested shapes [0.13ms]
(pass) PPTX Reader > Complex XML patterns > should handle multiple paragraphs in shape
(pass) PPTX Reader > Complex XML patterns > should handle multiple text runs
(pass) PPTX Reader > Edge case handling > should handle malformed XML gracefully
(pass) PPTX Reader > Edge case handling > should trim whitespace from text

packages/pandapage/test/pptx-parser.test.ts:
(pass) convertPptxToMarkdown handles empty presentation
(pass) convertPptxToMarkdown adds metadata title
(pass) convertPptxToMarkdown formats single slide
(pass) convertPptxToMarkdown adds slide separators
(pass) convertPptxToMarkdown formats bullet points
(pass) convertPptxToMarkdown handles images
(pass) convertPptxToMarkdown handles missing content gracefully

packages/pandapage/test/pptx-reader-internal.test.ts:
(pass) pptx-reader internal functions > readPptx with valid PPTX > should parse a simple PPTX file with one slide [0.50ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should parse multiple slides [0.76ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle slides without metadata [0.27ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should parse slide with bullet points [0.32ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle center title [0.25ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle empty paragraphs [0.12ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle multiple text runs in paragraph [0.38ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle no bullet indicator as having bullets [0.13ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle explicit no bullets [0.36ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should extract metadata correctly [0.28ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle empty metadata values [0.28ms]
(pass) pptx-reader internal functions > readPptx with valid PPTX > should handle missing slide files gracefully
(pass) pptx-reader internal functions > readPptx with valid PPTX > should sort slides by slide number [0.44ms]
(pass) pptx-reader internal functions > Error handling > should fail with corrupted ZIP
(pass) pptx-reader internal functions > Error handling > should handle invalid slide XML gracefully [0.35ms]
(pass) pptx-reader internal functions > Error handling > should return PptxParseError for failures [0.42ms]
(pass) pptx-reader internal functions > parseSlideXml coverage > should handle shape without text body [0.18ms]
(pass) pptx-reader internal functions > parseSlideXml coverage > should skip shapes with no content [0.22ms]
(pass) pptx-reader internal functions > parseSlideXml coverage > should only set title once [0.48ms]

packages/pandapage/test/docx-parser.test.ts:
(pass) convertDocxToMarkdown handles empty document
(pass) convertDocxToMarkdown formats headings correctly
(pass) convertDocxToMarkdown handles text formatting
(pass) convertDocxToMarkdown formats bullet lists
(pass) convertDocxToMarkdown formats numbered lists
(pass) convertDocxToMarkdown handles nested lists [0.51ms]
(pass) readDocx returns error for invalid buffer [0.04ms]

packages/pandapage/test/title-extraction.test.ts:
(pass) Title Extraction from DOCX > should handle empty buffer gracefully [1.54ms]
(pass) Title Extraction from DOCX > structured document should include metadata fields
(pass) Title Extraction from DOCX > getDocumentTitle logic should prioritize metadata title

packages/pandapage/test/docx-enhanced-parser.test.ts:
(pass) readEnhancedDocx includes metadata
(pass) docxToMarkdownWithMetadata handles basic document [0.41ms]
(pass) Enhanced DOCX reader exports are available

packages/pandapage/test/validation.test.ts:
(pass) Validation Functions > validateTableBorders > should return empty object for null input [0.40ms]
(pass) Validation Functions > validateTableBorders > should return empty object for undefined input
(pass) Validation Functions > validateTableBorders > should return empty object for non-object input
(pass) Validation Functions > validateTableBorders > should return empty object for number input [0.13ms]
(pass) Validation Functions > validateTableBorders > should return array as-is for array input
(pass) Validation Functions > validateTableBorders > should return object as-is for valid object input
(pass) Validation Functions > validateTableBorders > should handle complex border objects
(pass) Validation Functions > validateTableProperties > should return empty object for null input
(pass) Validation Functions > validateTableProperties > should return empty object for undefined input
(pass) Validation Functions > validateTableProperties > should return empty object for non-object input [0.16ms]
(pass) Validation Functions > validateTableProperties > should return object as-is for valid object input [0.04ms]
(pass) Validation Functions > validateTableProperties > should handle properties with style
(pass) Validation Functions > validateTableRowProperties > should return empty object for null input
(pass) Validation Functions > validateTableRowProperties > should return empty object for undefined input
(pass) Validation Functions > validateTableRowProperties > should return empty object for string input
(pass) Validation Functions > validateTableRowProperties > should return object as-is for valid object input
(pass) Validation Functions > validateTableRowProperties > should handle row properties with various fields
(pass) Validation Functions > validateTableCellProperties > should return empty object for null input
(pass) Validation Functions > validateTableCellProperties > should return empty object for undefined input
(pass) Validation Functions > validateTableCellProperties > should return empty object for boolean input
(pass) Validation Functions > validateTableCellProperties > should return object as-is for valid object input
(pass) Validation Functions > validateTableCellProperties > should handle cell properties with borders
(pass) Validation Functions > parseWithDefaults > should return defaults for null input [0.39ms]
(pass) Validation Functions > parseWithDefaults > should return defaults for undefined input [0.03ms]
(pass) Validation Functions > parseWithDefaults > should merge data with defaults
(pass) Validation Functions > parseWithDefaults > should override defaults with provided data [0.05ms]
(pass) Validation Functions > parseWithDefaults > should handle empty object with defaults
(pass) Validation Functions > parseWithDefaults > should handle complex nested objects
(pass) Validation Functions > parseWithDefaults > should handle arrays in data
(pass) Validation Functions > parseWithDefaults > should preserve all data fields even if not in defaults [0.16ms]
(pass) Validation Functions > Error handling > DocxParseError should be throwable from validation [0.03ms]
(pass) Validation Functions > Error handling > All validation functions return Effect type [0.03ms]

packages/pandapage/test/config-validation.test.ts:
(pass) validateConfig - should use defaults for empty input [0.10ms]
(pass) validateConfig - should merge user config with defaults [0.03ms]
(pass) validateConfig - should enforce maxWorkers limit [0.14ms]
(pass) validateConfig - should enforce chunkSize vs maxFileSize
(pass) validateConfig - should handle invalid types gracefully [0.19ms]
(pass) DEFAULT_CONFIG - should have valid structure
(pass) ConfigError - should have proper structure
(pass) validateConfig - should handle null and undefined [0.17ms]
(pass) Performance constraints should be realistic

packages/pandapage/test/workers/worker-basic.test.ts:
(pass) shouldUseWorker returns true for large files
(pass) createTransferableTask creates proper task structure [0.53ms]
(pass) worker pool config respects hardware concurrency

packages/pandapage/src/formats/docx/table-parser.test.ts:
(pass) Table Parser > parseTableProperties > should parse table width in pixels
(pass) Table Parser > parseTableProperties > should parse table width in percentage
(pass) Table Parser > parseTableProperties > should parse table alignment
(pass) Table Parser > parseTableProperties > should parse background color
(pass) Table Parser > parseTableProperties > should handle missing properties
(pass) Table Parser > parseTableRowProperties > should parse row height
(pass) Table Parser > parseTableRowProperties > should identify header rows
(pass) Table Parser > parseTableCellProperties > should parse cell width
(pass) Table Parser > parseTableCellProperties > should parse vertical alignment
(pass) Table Parser > parseTableCellProperties > should parse cell background color
(pass) Table Parser > Complex table parsing > should parse table with GridTable1Light style
(pass) Table Parser > Complex table parsing > should handle tables with merged cells
(pass) Table Parser > Complex table parsing > should handle nested tables
(pass) Table Parser > Border parsing > should parse table borders correctly
(pass) Table Parser > Border parsing > should handle different border styles [0.91ms]

packages/pandapage/src/formats/docx/docx-to-markdown-fields.test.ts:
(pass) DOCX to Markdown - Field Conversion > should convert FORMTEXT fields to markdown placeholders
(pass) DOCX to Markdown - Field Conversion > should convert empty FORMTEXT fields to default placeholders
(pass) DOCX to Markdown - Field Conversion > should convert checkbox fields
(pass) DOCX to Markdown - Field Conversion > should convert dropdown fields
(pass) DOCX to Markdown - Field Conversion > should convert date fields with results
(pass) DOCX to Markdown - Field Conversion > should handle multiple fields in one paragraph
(pass) DOCX to Markdown - Field Conversion > should convert page numbering fields
(pass) DOCX to Markdown - Field Conversion > should handle fields in headings [0.03ms]
(pass) DOCX to Markdown - Field Conversion > should handle fields in list items [0.04ms]
(pass) DOCX to Markdown - Field Conversion > should handle fields without accompanying text

packages/pandapage/src/formats/docx/table-008.test.ts:
(pass) 008.docx Table Parsing > should parse table with 'Requested information' and 'Insert inputs under this column' [0.19ms]
(pass) 008.docx Table Parsing > should handle table properties from 008.docx [0.03ms]
(pass) 008.docx Table Parsing > should parse form fields in table cells
(pass) 008.docx Table Parsing > should handle Note with bold formatting after table

packages/pandapage/src/formats/docx/table-to-markdown.test.ts:
(pass) Table to Markdown Conversion > should convert simple 2x2 table [0.53ms]
(pass) Table to Markdown Conversion > should handle tables with formatting
(pass) Table to Markdown Conversion > should handle multi-paragraph cells [0.07ms]
(pass) Table to Markdown Conversion > should handle empty cells
(pass) Table to Markdown Conversion > should handle tables with properties
(pass) Table to Markdown Conversion > should handle complex table from 008.docx pattern
(pass) Table to Markdown Conversion > should escape pipe characters in cell content
(pass) Table to Markdown Conversion > should handle lists within table cells [0.13ms]
(pass) Table to Markdown Conversion > should handle tables with no rows
(pass) Table to Markdown Conversion > should determine header row from first row when not specified

packages/pandapage/src/formats/docx/table-enhancements.test.ts:
(pass) Table Enhancements > parseGridSpan > should parse grid span value
(pass) Table Enhancements > parseGridSpan > should return 1 for missing grid span
(pass) Table Enhancements > parseGridSpan > should handle invalid grid span values
(pass) Table Enhancements > parseVMerge > should parse vMerge continue
(pass) Table Enhancements > parseVMerge > should parse vMerge restart
(pass) Table Enhancements > parseVMerge > should return undefined for no vMerge
(pass) Table Enhancements > calculateRowSpans > should calculate row spans for vertically merged cells
(pass) Table Enhancements > calculateRowSpans > should handle complex merge patterns
(pass) Table Enhancements > hasNestedTables > should detect nested tables
(pass) Table Enhancements > hasNestedTables > should return false for simple tables
(pass) Table Enhancements > parseTableStyle > should parse table style name
(pass) Table Enhancements > parseTableStyle > should parse table look options
(pass) Table Enhancements > convertEnhancedTableToMarkdown > should convert table with merged cells to HTML
(pass) Table Enhancements > convertEnhancedTableToMarkdown > should handle rowspan in HTML output

packages/pandapage/src/formats/docx/form-field-parser.test.ts:
(pass) Form Field Parser > parseFieldInstruction > should parse FORMTEXT field with default text [0.42ms]
(pass) Form Field Parser > parseFieldInstruction > should parse FORMTEXT field without default text
(pass) Form Field Parser > parseFieldInstruction > should parse HYPERLINK field
(pass) Form Field Parser > parseFieldInstruction > should parse PAGE field
(pass) Form Field Parser > parseFieldInstruction > should parse field with switches
(pass) Form Field Parser > parseFieldInstruction > should handle unknown field types
(pass) Form Field Parser > parseFieldsFromParagraph > should parse simple FORMTEXT field [0.54ms]
(pass) Form Field Parser > parseFieldsFromParagraph > should parse multiple fields in one paragraph
(pass) Form Field Parser > parseFieldsFromParagraph > should handle nested fields
(pass) Form Field Parser > parseFieldsFromParagraph > should handle empty paragraph [0.05ms]
(pass) Form Field Parser > fieldToMarkdown > should convert FORMTEXT to placeholder
(pass) Form Field Parser > fieldToMarkdown > should use default placeholder for FORMTEXT without default
(pass) Form Field Parser > fieldToMarkdown > should convert FORMCHECKBOX to checkbox
(pass) Form Field Parser > fieldToMarkdown > should convert FORMDROPDOWN to dropdown
(pass) Form Field Parser > fieldToMarkdown > should convert PAGE field with result
(pass) Form Field Parser > fieldToMarkdown > should convert HYPERLINK to markdown link
(pass) Form Field Parser > fieldToMarkdown > should handle DATE field
(pass) Form Field Parser > fieldToMarkdown > should use current date for DATE without result [6.97ms]
(pass) Form Field Parser > fieldToMarkdown > should handle unknown field types
(pass) Form Field Parser > fieldToMarkdown > should show placeholder for unknown field without result
(pass) Form Field Parser > paragraphContainsFields > should detect fields in paragraph
(pass) Form Field Parser > paragraphContainsFields > should return false for paragraph without fields
(pass) Form Field Parser > edge cases > should handle malformed field XML gracefully [0.57ms]
(pass) Form Field Parser > edge cases > should handle fields split across multiple runs [0.04ms]
(pass) Form Field Parser > edge cases > should handle special characters in field values [0.04ms]

packages/pandapage/src/formats/docx/docx-reader-fields.test.ts:
(pass) DOCX Reader - Field Integration > should parse paragraphs with form fields [0.66ms]
(pass) DOCX Reader - Field Integration > should parse paragraphs with multiple fields [0.05ms]
(pass) DOCX Reader - Field Integration > should handle paragraphs without fields
(pass) DOCX Reader - Field Integration > should parse complex field with formatting
(pass) DOCX Reader - Field Integration > should handle page numbering fields [0.25ms]

1 tests skipped:
(skip) XML Parser > parseXmlString > should handle XML with CDATA

 374 pass
 1 skip
 0 fail
 2774 expect() calls
Ran 375 tests across 26 files. [235.00ms]
