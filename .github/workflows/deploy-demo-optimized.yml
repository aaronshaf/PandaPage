name: Deploy Demo to GitHub Pages (Optimized)

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUN_VERSION: latest

jobs:
  # Build and deploy job
  deploy:
    # Only deploy if the prerequisite workflows succeeded
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      # Cache Bun dependencies
      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      # Download artifacts from CI workflow
      - name: Download CI workflow artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            const buildArtifact = artifacts.data.artifacts.find(a => a.name === 'build-artifacts');
            if (buildArtifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: buildArtifact.id,
                archive_format: 'zip'
              });
              
              const fs = require('fs');
              fs.writeFileSync('build-artifacts.zip', Buffer.from(download.data));
              
              await exec.exec('unzip', ['-o', 'build-artifacts.zip', '-d', 'packages']);
            }

      # Only build viewer app (other packages already built)
      - name: Build viewer for production
        run: |
          cd packages/viewer
          NODE_ENV=production DOTENV_CONFIG_SILENT=true bun run build
        env:
          DOTENV_CONFIG_SILENT: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'packages/viewer/dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4