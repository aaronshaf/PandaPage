name: Claude Code Review

# This workflow runs after the CI workflow completes successfully
# This ensures Claude Code review only runs on code that passes all checks
# (lint, typecheck, unit tests, E2E tests)
on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - '**'  # Run on all branches

jobs:
  claude-review:
    # Only run if the CI workflow succeeded and it's a pull request
    # This prevents Claude from reviewing code that has failing tests or type errors
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'pull_request'
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: write      # For checking out code and potential fixes
      pull-requests: write # For commenting on PRs
      issues: write        # For creating issues if needed
      id-token: write
      actions: read       # For reading CI results
    
    steps:
      # Get PR details from the workflow run
      - name: Get PR details
        id: pr-details
        uses: actions/github-script@v7
        with:
          script: |
            const workflowRun = context.payload.workflow_run;
            const prNumber = workflowRun.pull_requests[0]?.number;
            
            if (!prNumber) {
              core.setFailed('No pull request found for this workflow run');
              return;
            }
            
            core.setOutput('pr_number', prNumber);
            console.log(`Found PR #${prNumber}`);

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          # Check out the PR branch
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          allowed_tools: |
            Bash(bun install)
            Bash(bun test)
            Bash(bun run test:*)
            Bash(bun run coverage)
            Bash(bun run lint)
            Bash(bun run typecheck)
            Bash(bun run check)
            Grep
            Read
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

